/*
 * dht11.c
 *
 *  Created on: Jun 26, 2025
 *      Author: kccistc
 */


#include "stm32f4xx_hal.h"
#include "dht11.h"

GPIO_TypeDef * dht11port;
uint32_t dht11pin;

void delay_us(uint32_t us)
{
    uint32_t cycles = (SystemCoreClock / 1000000) * us;
    uint32_t start = DWT->CYCCNT;
    while ((DWT->CYCCNT - start) < cycles);
}


void DHT11_Init(GPIO_TypeDef * port, uint16_t GPIO_Pin)
{
	dht11port = port;
	dht11pin = GPIO_Pin;
}

void Set_Pin_Output()
{
    GPIO_InitTypeDef GPIO_InitStruct = {0};
    GPIO_InitStruct.Pin = dht11pin;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(dht11port, &GPIO_InitStruct);
}

void Set_Pin_Input()
{
    GPIO_InitTypeDef GPIO_InitStruct = {0};
    GPIO_InitStruct.Pin = dht11pin;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(dht11port, &GPIO_InitStruct);
}

void dht_start()
{	HAL_GPIO_WritePin(dht11port, dht11pin, SET);
    HAL_Delay(100);
	HAL_GPIO_WritePin(dht11port, dht11pin, RESET);
	HAL_Delay(18);
	HAL_GPIO_WritePin(dht11port, dht11pin, SET);
	delay_us(40);
	Set_Pin_Input();
	HAL_TIM_IC_Start_IT(&htim4, TIM_CHANNEL_1);
}

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
		static uint8_t index = 0;
		static uint32_t data[40];
	   if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
	   {
		   __HAL_TIM_SET_COUNTER(&htim4, 0);
	   }

	   if(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2)
	   {
		   if(HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_2) > 40)
			   {
			   data[index] = 1;
			   }
		   else {
			   data[index] = 0;
		   }
		   index++;
	   }


	   if (index < 35) {
	       // 기록
	   } else {
	       // 수신 완료 처리
	       HAL_TIM_IC_Stop_IT(htim, TIM_CHANNEL_1);
	       HAL_TIM_IC_Stop_IT(htim, TIM_CHANNEL_2);
	       Set_Pin_Output();
	   }

}
