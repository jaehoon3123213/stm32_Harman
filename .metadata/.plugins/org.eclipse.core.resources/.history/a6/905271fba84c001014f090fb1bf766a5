/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f411xe.h"
#include "GPIO.h"
#include "LedBar.h"

#define PERIPH_BASE                (0x40000000UL)           // unsigned 4bytes
#define APB1PERIPH_OFFSET          (0x00000UL)
#define APB2PERIPH_OFFSET          (0x10000UL)

#define AHB1PERIPH_OFFSET          (0x20000UL)


#define APB1PERIPH_BASE            (PERIPH_BASE + APB1PERIPH_OFFSET)
#define APB2PERIPH_BASE            (PERIPH_BASE + APB2PERIPH_OFFSET)

#define AHB1PERIPH_BASE            (PERIPH_BASE + AHB1PERIPH_OFFSET)


#define GPIOA_OFFSET (0x0000UL)
#define GPIOB_OFFSET (0x0400UL)
#define GPIOC_OFFSET (0x0800UL)
#define GPIOD_OFFSET (0x0C00UL)



#define RCC_OFFSET (0x3800UL)

#define GPIOA_BASE (AHB1PERIPH_BASE + GPIOA_OFFSET)
#define GPIOB_BASE (AHB1PERIPH_BASE + GPIOB_OFFSET)
#define GPIOC_BASE (AHB1PERIPH_BASE + GPIOC_OFFSET)
#define GPIOD_BASE (AHB1PERIPH_BASE + GPIOD_OFFSET)




#define RCC_BASE   (AHB1PERIPH_BASE + RCC_OFFSET)

#define RCC ((RCC_TypeDef *)(RCC_BASE))







#define RCC_AHB1ENR *(volatile uint32_t *) 0x40023830


#define GPIOA ((GPIO_TypeDef *) (GPIOA_BASE))
#define GPIOB ((GPIO_TypeDef *) (GPIOB_BASE))
#define GPIOC ((GPIO_TypeDef *) (GPIOC_BASE))



void delay();

int main(void)
{
//	1. 페리페럴에 clock 넣기//
	RCC -> AHB1ENR |= (1U << 0);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
	RCC -> AHB1ENR |= (1U << 1);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
	RCC -> AHB1ENR |= (1U << 2);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다

	GPIO_Init(GPIOA, 5, OUTPUT);

	GPIO_Init(GPIOC, 2, OUTPUT); //1
	GPIO_Init(GPIOC, 3, OUTPUT); //2
	GPIO_Init(GPIOA, 0, OUTPUT); //3
	GPIO_Init(GPIOA, 1, OUTPUT); //4
	GPIO_Init(GPIOA, 4, OUTPUT); //5
	GPIO_Init(GPIOB, 0, OUTPUT); //6
	GPIO_Init(GPIOC, 1, OUTPUT); //7
	GPIO_Init(GPIOC, 0, OUTPUT); //8

	GPIO_Init(GPIOC, 13, INPUT); //1


	uint32_t a;
	uint32_t data = 1;
	uint32_t flag;

	while(1)
	{


		a = GPIO_ReadPin(GPIOC,13);

		if(a == 0)
		{
			if(flag)
			{
				flag = 0;
			}
			else
			{
				flag = 1;
			}
		}


		LED_Bar_Write(data);
		delay();
		delay();
		delay();


		if(flag)
		{
		data = (data << 1) | (data >> 7);
		}
		else
		{
		data = (data >> 1) | (data << 7);
		}
	}




}

void delay()
{
	for(int i = 0; i<100000; i++){}
}






