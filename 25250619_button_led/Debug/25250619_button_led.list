
25250619_button_led.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b9c  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000d34  08000d34  00002038  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000d34  08000d34  00002038  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000d34  08000d34  00002038  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000d34  08000d34  00002038  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d34  08000d34  00001d34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000d38  08000d38  00001d38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000038  20000000  08000d3c  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000044  20000038  08000d74  00002038  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000007c  08000d74  0000207c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000105c  00000000  00000000  00002068  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000008ba  00000000  00000000  000030c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000170  00000000  00000000  00003980  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000f0  00000000  00000000  00003af0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018629  00000000  00000000  00003be0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002541  00000000  00000000  0001c209  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00048a1b  00000000  00000000  0001e74a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00067165  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000033c  00000000  00000000  000671a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004d  00000000  00000000  000674e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000038 	.word	0x20000038
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000d1c 	.word	0x08000d1c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	2000003c 	.word	0x2000003c
 80001d4:	08000d1c 	.word	0x08000d1c

080001d8 <ap_main>:


enum {OFF,LEFT, RIGHT};
int ap_main()

{
 80001d8:	b580      	push	{r7, lr}
 80001da:	b084      	sub	sp, #16
 80001dc:	af00      	add	r7, sp, #0
	uint32_t led_state = 0;
 80001de:	2300      	movs	r3, #0
 80001e0:	60fb      	str	r3, [r7, #12]
	uint32_t data = 5;
 80001e2:	2305      	movs	r3, #5
 80001e4:	60bb      	str	r3, [r7, #8]
	uint32_t data_count = 0;
 80001e6:	2300      	movs	r3, #0
 80001e8:	607b      	str	r3, [r7, #4]
////		GPIO_WritePin(GPIOC, 5, PIN_SET);
//		GPIO_WritePin(GPIOA, 12, PIN_SET);



		FND(data);
 80001ea:	68b8      	ldr	r0, [r7, #8]
 80001ec:	f000 f8c6 	bl	800037c <FND>



		switch (led_state)
 80001f0:	68fb      	ldr	r3, [r7, #12]
 80001f2:	2b02      	cmp	r3, #2
 80001f4:	d01c      	beq.n	8000230 <ap_main+0x58>
 80001f6:	68fb      	ldr	r3, [r7, #12]
 80001f8:	2b02      	cmp	r3, #2
 80001fa:	d84a      	bhi.n	8000292 <ap_main+0xba>
 80001fc:	68fb      	ldr	r3, [r7, #12]
 80001fe:	2b00      	cmp	r3, #0
 8000200:	d035      	beq.n	800026e <ap_main+0x96>
 8000202:	68fb      	ldr	r3, [r7, #12]
 8000204:	2b01      	cmp	r3, #1
 8000206:	d144      	bne.n	8000292 <ap_main+0xba>
		{
	      case LEFT:
	         if (Button_GetState(&hBtnRight) == ACT_RELEASED) led_state = RIGHT;
 8000208:	4824      	ldr	r0, [pc, #144]	@ (800029c <ap_main+0xc4>)
 800020a:	f000 fcff 	bl	8000c0c <Button_GetState>
 800020e:	4603      	mov	r3, r0
 8000210:	2b02      	cmp	r3, #2
 8000212:	d102      	bne.n	800021a <ap_main+0x42>
 8000214:	2302      	movs	r3, #2
 8000216:	60fb      	str	r3, [r7, #12]
 8000218:	e007      	b.n	800022a <ap_main+0x52>
	         else if (Button_GetState(&hBtnOnOff) == ACT_RELEASED) led_state = OFF;
 800021a:	4821      	ldr	r0, [pc, #132]	@ (80002a0 <ap_main+0xc8>)
 800021c:	f000 fcf6 	bl	8000c0c <Button_GetState>
 8000220:	4603      	mov	r3, r0
 8000222:	2b02      	cmp	r3, #2
 8000224:	d101      	bne.n	800022a <ap_main+0x52>
 8000226:	2300      	movs	r3, #0
 8000228:	60fb      	str	r3, [r7, #12]
	         data = 0;
 800022a:	2300      	movs	r3, #0
 800022c:	60bb      	str	r3, [r7, #8]

	      break;
 800022e:	e030      	b.n	8000292 <ap_main+0xba>

	      case RIGHT:
	         if (Button_GetState(&hBtnLeft) == ACT_RELEASED) led_state = LEFT;
 8000230:	481c      	ldr	r0, [pc, #112]	@ (80002a4 <ap_main+0xcc>)
 8000232:	f000 fceb 	bl	8000c0c <Button_GetState>
 8000236:	4603      	mov	r3, r0
 8000238:	2b02      	cmp	r3, #2
 800023a:	d102      	bne.n	8000242 <ap_main+0x6a>
 800023c:	2301      	movs	r3, #1
 800023e:	60fb      	str	r3, [r7, #12]
 8000240:	e007      	b.n	8000252 <ap_main+0x7a>
	         else if (Button_GetState(&hBtnOnOff) == ACT_RELEASED) led_state = OFF;
 8000242:	4817      	ldr	r0, [pc, #92]	@ (80002a0 <ap_main+0xc8>)
 8000244:	f000 fce2 	bl	8000c0c <Button_GetState>
 8000248:	4603      	mov	r3, r0
 800024a:	2b02      	cmp	r3, #2
 800024c:	d101      	bne.n	8000252 <ap_main+0x7a>
 800024e:	2300      	movs	r3, #0
 8000250:	60fb      	str	r3, [r7, #12]

//	         data = data + 1;
	         if(data_count == 1000)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000258:	d105      	bne.n	8000266 <ap_main+0x8e>
	         {
	         data = data + 1;
 800025a:	68bb      	ldr	r3, [r7, #8]
 800025c:	3301      	adds	r3, #1
 800025e:	60bb      	str	r3, [r7, #8]
	         data_count = 0;
 8000260:	2300      	movs	r3, #0
 8000262:	607b      	str	r3, [r7, #4]
	         }
	         else{
	         data_count = data_count + 1 ;
	         }
	      break;
 8000264:	e015      	b.n	8000292 <ap_main+0xba>
	         data_count = data_count + 1 ;
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	3301      	adds	r3, #1
 800026a:	607b      	str	r3, [r7, #4]
	      break;
 800026c:	e011      	b.n	8000292 <ap_main+0xba>

	      case OFF:
	         if (Button_GetState(&hBtnLeft) == ACT_RELEASED) led_state = LEFT;
 800026e:	480d      	ldr	r0, [pc, #52]	@ (80002a4 <ap_main+0xcc>)
 8000270:	f000 fccc 	bl	8000c0c <Button_GetState>
 8000274:	4603      	mov	r3, r0
 8000276:	2b02      	cmp	r3, #2
 8000278:	d102      	bne.n	8000280 <ap_main+0xa8>
 800027a:	2301      	movs	r3, #1
 800027c:	60fb      	str	r3, [r7, #12]
	         else if (Button_GetState(&hBtnRight) == ACT_RELEASED) led_state = RIGHT;
	      break;
 800027e:	e007      	b.n	8000290 <ap_main+0xb8>
	         else if (Button_GetState(&hBtnRight) == ACT_RELEASED) led_state = RIGHT;
 8000280:	4806      	ldr	r0, [pc, #24]	@ (800029c <ap_main+0xc4>)
 8000282:	f000 fcc3 	bl	8000c0c <Button_GetState>
 8000286:	4603      	mov	r3, r0
 8000288:	2b02      	cmp	r3, #2
 800028a:	d101      	bne.n	8000290 <ap_main+0xb8>
 800028c:	2302      	movs	r3, #2
 800028e:	60fb      	str	r3, [r7, #12]
	      break;
 8000290:	bf00      	nop
	      }

		delay(1);
 8000292:	2001      	movs	r0, #1
 8000294:	f000 fc80 	bl	8000b98 <delay>
		FND(data);
 8000298:	e7a7      	b.n	80001ea <ap_main+0x12>
 800029a:	bf00      	nop
 800029c:	20000060 	.word	0x20000060
 80002a0:	2000006c 	.word	0x2000006c
 80002a4:	20000054 	.word	0x20000054

080002a8 <ap_init>:
	return 0;
}


void ap_init()
{
 80002a8:	b580      	push	{r7, lr}
 80002aa:	af00      	add	r7, sp, #0
	SysyemClock_init();
 80002ac:	f000 fc58 	bl	8000b60 <SysyemClock_init>
	LED_Bar_init();
 80002b0:	f000 fc24 	bl	8000afc <LED_Bar_init>
	Button_Init(&hBtnRight, GPIOB, 3);
 80002b4:	2203      	movs	r2, #3
 80002b6:	4909      	ldr	r1, [pc, #36]	@ (80002dc <ap_init+0x34>)
 80002b8:	4809      	ldr	r0, [pc, #36]	@ (80002e0 <ap_init+0x38>)
 80002ba:	f000 fc8c 	bl	8000bd6 <Button_Init>
	Button_Init(&hBtnLeft, GPIOB, 5);
 80002be:	2205      	movs	r2, #5
 80002c0:	4906      	ldr	r1, [pc, #24]	@ (80002dc <ap_init+0x34>)
 80002c2:	4808      	ldr	r0, [pc, #32]	@ (80002e4 <ap_init+0x3c>)
 80002c4:	f000 fc87 	bl	8000bd6 <Button_Init>
	Button_Init(&hBtnOnOff, GPIOA, 10);
 80002c8:	220a      	movs	r2, #10
 80002ca:	4907      	ldr	r1, [pc, #28]	@ (80002e8 <ap_init+0x40>)
 80002cc:	4807      	ldr	r0, [pc, #28]	@ (80002ec <ap_init+0x44>)
 80002ce:	f000 fc82 	bl	8000bd6 <Button_Init>
	FND_init();
 80002d2:	f000 f80d 	bl	80002f0 <FND_init>
}
 80002d6:	bf00      	nop
 80002d8:	bd80      	pop	{r7, pc}
 80002da:	bf00      	nop
 80002dc:	40020400 	.word	0x40020400
 80002e0:	20000060 	.word	0x20000060
 80002e4:	20000054 	.word	0x20000054
 80002e8:	40020000 	.word	0x40020000
 80002ec:	2000006c 	.word	0x2000006c

080002f0 <FND_init>:
      {GPIOB, 14},
      {GPIOB, 13},
};

void FND_init()
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	af00      	add	r7, sp, #0
 	GPIO_Init(GPIOC, 8, OUTPUT); // D1
 80002f4:	2200      	movs	r2, #0
 80002f6:	2108      	movs	r1, #8
 80002f8:	481d      	ldr	r0, [pc, #116]	@ (8000370 <FND_init+0x80>)
 80002fa:	f000 fb93 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOC, 6, OUTPUT); // D2
 80002fe:	2200      	movs	r2, #0
 8000300:	2106      	movs	r1, #6
 8000302:	481b      	ldr	r0, [pc, #108]	@ (8000370 <FND_init+0x80>)
 8000304:	f000 fb8e 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOC, 5, OUTPUT); // D3
 8000308:	2200      	movs	r2, #0
 800030a:	2105      	movs	r1, #5
 800030c:	4818      	ldr	r0, [pc, #96]	@ (8000370 <FND_init+0x80>)
 800030e:	f000 fb89 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOA, 12, OUTPUT); // D4
 8000312:	2200      	movs	r2, #0
 8000314:	210c      	movs	r1, #12
 8000316:	4817      	ldr	r0, [pc, #92]	@ (8000374 <FND_init+0x84>)
 8000318:	f000 fb84 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOA, 11, OUTPUT); // A
 800031c:	2200      	movs	r2, #0
 800031e:	210b      	movs	r1, #11
 8000320:	4814      	ldr	r0, [pc, #80]	@ (8000374 <FND_init+0x84>)
 8000322:	f000 fb7f 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOB, 12, OUTPUT); // B
 8000326:	2200      	movs	r2, #0
 8000328:	210c      	movs	r1, #12
 800032a:	4813      	ldr	r0, [pc, #76]	@ (8000378 <FND_init+0x88>)
 800032c:	f000 fb7a 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOB, 2, OUTPUT); // C
 8000330:	2200      	movs	r2, #0
 8000332:	2102      	movs	r1, #2
 8000334:	4810      	ldr	r0, [pc, #64]	@ (8000378 <FND_init+0x88>)
 8000336:	f000 fb75 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOB, 1, OUTPUT); // D
 800033a:	2200      	movs	r2, #0
 800033c:	2101      	movs	r1, #1
 800033e:	480e      	ldr	r0, [pc, #56]	@ (8000378 <FND_init+0x88>)
 8000340:	f000 fb70 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOB, 15, OUTPUT); // E
 8000344:	2200      	movs	r2, #0
 8000346:	210f      	movs	r1, #15
 8000348:	480b      	ldr	r0, [pc, #44]	@ (8000378 <FND_init+0x88>)
 800034a:	f000 fb6b 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOB, 14, OUTPUT); // F
 800034e:	2200      	movs	r2, #0
 8000350:	210e      	movs	r1, #14
 8000352:	4809      	ldr	r0, [pc, #36]	@ (8000378 <FND_init+0x88>)
 8000354:	f000 fb66 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOB, 13, OUTPUT); // G
 8000358:	2200      	movs	r2, #0
 800035a:	210d      	movs	r1, #13
 800035c:	4806      	ldr	r0, [pc, #24]	@ (8000378 <FND_init+0x88>)
 800035e:	f000 fb61 	bl	8000a24 <GPIO_Init>
 	GPIO_Init(GPIOC, 4, OUTPUT); // DP
 8000362:	2200      	movs	r2, #0
 8000364:	2104      	movs	r1, #4
 8000366:	4802      	ldr	r0, [pc, #8]	@ (8000370 <FND_init+0x80>)
 8000368:	f000 fb5c 	bl	8000a24 <GPIO_Init>
}
 800036c:	bf00      	nop
 800036e:	bd80      	pop	{r7, pc}
 8000370:	40020800 	.word	0x40020800
 8000374:	40020000 	.word	0x40020000
 8000378:	40020400 	.word	0x40020400

0800037c <FND>:

void FND(uint32_t data)
{
 800037c:	b580      	push	{r7, lr}
 800037e:	b086      	sub	sp, #24
 8000380:	af00      	add	r7, sp, #0
 8000382:	6078      	str	r0, [r7, #4]
	static uint32_t digit = 0;
	uint32_t data1 = data % 10;
 8000384:	687a      	ldr	r2, [r7, #4]
 8000386:	4b39      	ldr	r3, [pc, #228]	@ (800046c <FND+0xf0>)
 8000388:	fba3 1302 	umull	r1, r3, r3, r2
 800038c:	08d9      	lsrs	r1, r3, #3
 800038e:	460b      	mov	r3, r1
 8000390:	009b      	lsls	r3, r3, #2
 8000392:	440b      	add	r3, r1
 8000394:	005b      	lsls	r3, r3, #1
 8000396:	1ad3      	subs	r3, r2, r3
 8000398:	617b      	str	r3, [r7, #20]
	uint32_t data10 = data/10 % 10;
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4a33      	ldr	r2, [pc, #204]	@ (800046c <FND+0xf0>)
 800039e:	fba2 2303 	umull	r2, r3, r2, r3
 80003a2:	08da      	lsrs	r2, r3, #3
 80003a4:	4b31      	ldr	r3, [pc, #196]	@ (800046c <FND+0xf0>)
 80003a6:	fba3 1302 	umull	r1, r3, r3, r2
 80003aa:	08d9      	lsrs	r1, r3, #3
 80003ac:	460b      	mov	r3, r1
 80003ae:	009b      	lsls	r3, r3, #2
 80003b0:	440b      	add	r3, r1
 80003b2:	005b      	lsls	r3, r3, #1
 80003b4:	1ad3      	subs	r3, r2, r3
 80003b6:	613b      	str	r3, [r7, #16]
	uint32_t data100 = data/100 % 10;
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a2d      	ldr	r2, [pc, #180]	@ (8000470 <FND+0xf4>)
 80003bc:	fba2 2303 	umull	r2, r3, r2, r3
 80003c0:	095a      	lsrs	r2, r3, #5
 80003c2:	4b2a      	ldr	r3, [pc, #168]	@ (800046c <FND+0xf0>)
 80003c4:	fba3 1302 	umull	r1, r3, r3, r2
 80003c8:	08d9      	lsrs	r1, r3, #3
 80003ca:	460b      	mov	r3, r1
 80003cc:	009b      	lsls	r3, r3, #2
 80003ce:	440b      	add	r3, r1
 80003d0:	005b      	lsls	r3, r3, #1
 80003d2:	1ad3      	subs	r3, r2, r3
 80003d4:	60fb      	str	r3, [r7, #12]
	uint32_t data1000 = data/1000 % 10;
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4a26      	ldr	r2, [pc, #152]	@ (8000474 <FND+0xf8>)
 80003da:	fba2 2303 	umull	r2, r3, r2, r3
 80003de:	099a      	lsrs	r2, r3, #6
 80003e0:	4b22      	ldr	r3, [pc, #136]	@ (800046c <FND+0xf0>)
 80003e2:	fba3 1302 	umull	r1, r3, r3, r2
 80003e6:	08d9      	lsrs	r1, r3, #3
 80003e8:	460b      	mov	r3, r1
 80003ea:	009b      	lsls	r3, r3, #2
 80003ec:	440b      	add	r3, r1
 80003ee:	005b      	lsls	r3, r3, #1
 80003f0:	1ad3      	subs	r3, r2, r3
 80003f2:	60bb      	str	r3, [r7, #8]
	switch(digit)
 80003f4:	4b20      	ldr	r3, [pc, #128]	@ (8000478 <FND+0xfc>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	2b03      	cmp	r3, #3
 80003fa:	d823      	bhi.n	8000444 <FND+0xc8>
 80003fc:	a201      	add	r2, pc, #4	@ (adr r2, 8000404 <FND+0x88>)
 80003fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000402:	bf00      	nop
 8000404:	08000415 	.word	0x08000415
 8000408:	08000421 	.word	0x08000421
 800040c:	0800042d 	.word	0x0800042d
 8000410:	08000439 	.word	0x08000439
	{
	case 0:
		FND0();
 8000414:	f000 f832 	bl	800047c <FND0>
		FND_Display(data1);
 8000418:	6978      	ldr	r0, [r7, #20]
 800041a:	f000 f89f 	bl	800055c <FND_Display>
		break;
 800041e:	e011      	b.n	8000444 <FND+0xc8>
	case 1:
		FND10();
 8000420:	f000 f848 	bl	80004b4 <FND10>
		FND_Display(data10);
 8000424:	6938      	ldr	r0, [r7, #16]
 8000426:	f000 f899 	bl	800055c <FND_Display>
		break;
 800042a:	e00b      	b.n	8000444 <FND+0xc8>
	case 2:
		FND100();
 800042c:	f000 f85e 	bl	80004ec <FND100>
		FND_Display(data100);
 8000430:	68f8      	ldr	r0, [r7, #12]
 8000432:	f000 f893 	bl	800055c <FND_Display>
		break;
 8000436:	e005      	b.n	8000444 <FND+0xc8>
	case 3:
		FND1000();
 8000438:	f000 f874 	bl	8000524 <FND1000>
		FND_Display(data1000);
 800043c:	68b8      	ldr	r0, [r7, #8]
 800043e:	f000 f88d 	bl	800055c <FND_Display>
		break;
 8000442:	bf00      	nop
	}
	digit ++;
 8000444:	4b0c      	ldr	r3, [pc, #48]	@ (8000478 <FND+0xfc>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	3301      	adds	r3, #1
 800044a:	4a0b      	ldr	r2, [pc, #44]	@ (8000478 <FND+0xfc>)
 800044c:	6013      	str	r3, [r2, #0]
	if(digit ==4)
 800044e:	4b0a      	ldr	r3, [pc, #40]	@ (8000478 <FND+0xfc>)
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	2b04      	cmp	r3, #4
 8000454:	d102      	bne.n	800045c <FND+0xe0>
	{
		digit = 0;
 8000456:	4b08      	ldr	r3, [pc, #32]	@ (8000478 <FND+0xfc>)
 8000458:	2200      	movs	r2, #0
 800045a:	601a      	str	r2, [r3, #0]
	}
	delay(1);
 800045c:	2001      	movs	r0, #1
 800045e:	f000 fb9b 	bl	8000b98 <delay>

};
 8000462:	bf00      	nop
 8000464:	3718      	adds	r7, #24
 8000466:	46bd      	mov	sp, r7
 8000468:	bd80      	pop	{r7, pc}
 800046a:	bf00      	nop
 800046c:	cccccccd 	.word	0xcccccccd
 8000470:	51eb851f 	.word	0x51eb851f
 8000474:	10624dd3 	.word	0x10624dd3
 8000478:	20000078 	.word	0x20000078

0800047c <FND0>:


void FND0()
{
 800047c:	b580      	push	{r7, lr}
 800047e:	af00      	add	r7, sp, #0
	GPIO_WritePin(GPIOC, 8, PIN_SET);
 8000480:	2201      	movs	r2, #1
 8000482:	2108      	movs	r1, #8
 8000484:	4809      	ldr	r0, [pc, #36]	@ (80004ac <FND0+0x30>)
 8000486:	f000 fafe 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 6, PIN_SET);
 800048a:	2201      	movs	r2, #1
 800048c:	2106      	movs	r1, #6
 800048e:	4807      	ldr	r0, [pc, #28]	@ (80004ac <FND0+0x30>)
 8000490:	f000 faf9 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 5, PIN_SET);
 8000494:	2201      	movs	r2, #1
 8000496:	2105      	movs	r1, #5
 8000498:	4804      	ldr	r0, [pc, #16]	@ (80004ac <FND0+0x30>)
 800049a:	f000 faf4 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOA, 12, PIN_RESET);
 800049e:	2200      	movs	r2, #0
 80004a0:	210c      	movs	r1, #12
 80004a2:	4803      	ldr	r0, [pc, #12]	@ (80004b0 <FND0+0x34>)
 80004a4:	f000 faef 	bl	8000a86 <GPIO_WritePin>
};
 80004a8:	bf00      	nop
 80004aa:	bd80      	pop	{r7, pc}
 80004ac:	40020800 	.word	0x40020800
 80004b0:	40020000 	.word	0x40020000

080004b4 <FND10>:

void FND10()
{
 80004b4:	b580      	push	{r7, lr}
 80004b6:	af00      	add	r7, sp, #0
	GPIO_WritePin(GPIOC, 8, PIN_SET);
 80004b8:	2201      	movs	r2, #1
 80004ba:	2108      	movs	r1, #8
 80004bc:	4809      	ldr	r0, [pc, #36]	@ (80004e4 <FND10+0x30>)
 80004be:	f000 fae2 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 6, PIN_SET);
 80004c2:	2201      	movs	r2, #1
 80004c4:	2106      	movs	r1, #6
 80004c6:	4807      	ldr	r0, [pc, #28]	@ (80004e4 <FND10+0x30>)
 80004c8:	f000 fadd 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 5, PIN_RESET);
 80004cc:	2200      	movs	r2, #0
 80004ce:	2105      	movs	r1, #5
 80004d0:	4804      	ldr	r0, [pc, #16]	@ (80004e4 <FND10+0x30>)
 80004d2:	f000 fad8 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOA, 12, PIN_SET);
 80004d6:	2201      	movs	r2, #1
 80004d8:	210c      	movs	r1, #12
 80004da:	4803      	ldr	r0, [pc, #12]	@ (80004e8 <FND10+0x34>)
 80004dc:	f000 fad3 	bl	8000a86 <GPIO_WritePin>
};
 80004e0:	bf00      	nop
 80004e2:	bd80      	pop	{r7, pc}
 80004e4:	40020800 	.word	0x40020800
 80004e8:	40020000 	.word	0x40020000

080004ec <FND100>:

void FND100()
{
 80004ec:	b580      	push	{r7, lr}
 80004ee:	af00      	add	r7, sp, #0
	GPIO_WritePin(GPIOC, 8, PIN_SET);
 80004f0:	2201      	movs	r2, #1
 80004f2:	2108      	movs	r1, #8
 80004f4:	4809      	ldr	r0, [pc, #36]	@ (800051c <FND100+0x30>)
 80004f6:	f000 fac6 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 6, PIN_RESET);
 80004fa:	2200      	movs	r2, #0
 80004fc:	2106      	movs	r1, #6
 80004fe:	4807      	ldr	r0, [pc, #28]	@ (800051c <FND100+0x30>)
 8000500:	f000 fac1 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 5, PIN_SET);
 8000504:	2201      	movs	r2, #1
 8000506:	2105      	movs	r1, #5
 8000508:	4804      	ldr	r0, [pc, #16]	@ (800051c <FND100+0x30>)
 800050a:	f000 fabc 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOA, 12, PIN_SET);
 800050e:	2201      	movs	r2, #1
 8000510:	210c      	movs	r1, #12
 8000512:	4803      	ldr	r0, [pc, #12]	@ (8000520 <FND100+0x34>)
 8000514:	f000 fab7 	bl	8000a86 <GPIO_WritePin>
};
 8000518:	bf00      	nop
 800051a:	bd80      	pop	{r7, pc}
 800051c:	40020800 	.word	0x40020800
 8000520:	40020000 	.word	0x40020000

08000524 <FND1000>:

void FND1000()
{
 8000524:	b580      	push	{r7, lr}
 8000526:	af00      	add	r7, sp, #0
	GPIO_WritePin(GPIOC, 8, PIN_RESET);
 8000528:	2200      	movs	r2, #0
 800052a:	2108      	movs	r1, #8
 800052c:	4809      	ldr	r0, [pc, #36]	@ (8000554 <FND1000+0x30>)
 800052e:	f000 faaa 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 6, PIN_SET);
 8000532:	2201      	movs	r2, #1
 8000534:	2106      	movs	r1, #6
 8000536:	4807      	ldr	r0, [pc, #28]	@ (8000554 <FND1000+0x30>)
 8000538:	f000 faa5 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOC, 5, PIN_SET);
 800053c:	2201      	movs	r2, #1
 800053e:	2105      	movs	r1, #5
 8000540:	4804      	ldr	r0, [pc, #16]	@ (8000554 <FND1000+0x30>)
 8000542:	f000 faa0 	bl	8000a86 <GPIO_WritePin>
	GPIO_WritePin(GPIOA, 12, PIN_SET);
 8000546:	2201      	movs	r2, #1
 8000548:	210c      	movs	r1, #12
 800054a:	4803      	ldr	r0, [pc, #12]	@ (8000558 <FND1000+0x34>)
 800054c:	f000 fa9b 	bl	8000a86 <GPIO_WritePin>
};
 8000550:	bf00      	nop
 8000552:	bd80      	pop	{r7, pc}
 8000554:	40020800 	.word	0x40020800
 8000558:	40020000 	.word	0x40020000

0800055c <FND_Display>:


void FND_Display(uint32_t data)
{
 800055c:	b580      	push	{r7, lr}
 800055e:	b082      	sub	sp, #8
 8000560:	af00      	add	r7, sp, #0
 8000562:	6078      	str	r0, [r7, #4]
	switch(data)
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	2b09      	cmp	r3, #9
 8000568:	f200 8255 	bhi.w	8000a16 <FND_Display+0x4ba>
 800056c:	a201      	add	r2, pc, #4	@ (adr r2, 8000574 <FND_Display+0x18>)
 800056e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000572:	bf00      	nop
 8000574:	0800059d 	.word	0x0800059d
 8000578:	0800060f 	.word	0x0800060f
 800057c:	08000681 	.word	0x08000681
 8000580:	080006f3 	.word	0x080006f3
 8000584:	08000765 	.word	0x08000765
 8000588:	080007dd 	.word	0x080007dd
 800058c:	0800084f 	.word	0x0800084f
 8000590:	080008c1 	.word	0x080008c1
 8000594:	08000933 	.word	0x08000933
 8000598:	080009a5 	.word	0x080009a5
	{
	case 0:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 800059c:	4b8e      	ldr	r3, [pc, #568]	@ (80007d8 <FND_Display+0x27c>)
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	4a8d      	ldr	r2, [pc, #564]	@ (80007d8 <FND_Display+0x27c>)
 80005a2:	6851      	ldr	r1, [r2, #4]
 80005a4:	2201      	movs	r2, #1
 80005a6:	4618      	mov	r0, r3
 80005a8:	f000 fa6d 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 80005ac:	4b8a      	ldr	r3, [pc, #552]	@ (80007d8 <FND_Display+0x27c>)
 80005ae:	689b      	ldr	r3, [r3, #8]
 80005b0:	4a89      	ldr	r2, [pc, #548]	@ (80007d8 <FND_Display+0x27c>)
 80005b2:	68d1      	ldr	r1, [r2, #12]
 80005b4:	2201      	movs	r2, #1
 80005b6:	4618      	mov	r0, r3
 80005b8:	f000 fa65 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 80005bc:	4b86      	ldr	r3, [pc, #536]	@ (80007d8 <FND_Display+0x27c>)
 80005be:	691b      	ldr	r3, [r3, #16]
 80005c0:	4a85      	ldr	r2, [pc, #532]	@ (80007d8 <FND_Display+0x27c>)
 80005c2:	6951      	ldr	r1, [r2, #20]
 80005c4:	2201      	movs	r2, #1
 80005c6:	4618      	mov	r0, r3
 80005c8:	f000 fa5d 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_SET);
 80005cc:	4b82      	ldr	r3, [pc, #520]	@ (80007d8 <FND_Display+0x27c>)
 80005ce:	699b      	ldr	r3, [r3, #24]
 80005d0:	4a81      	ldr	r2, [pc, #516]	@ (80007d8 <FND_Display+0x27c>)
 80005d2:	69d1      	ldr	r1, [r2, #28]
 80005d4:	2201      	movs	r2, #1
 80005d6:	4618      	mov	r0, r3
 80005d8:	f000 fa55 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_SET);
 80005dc:	4b7e      	ldr	r3, [pc, #504]	@ (80007d8 <FND_Display+0x27c>)
 80005de:	6a1b      	ldr	r3, [r3, #32]
 80005e0:	4a7d      	ldr	r2, [pc, #500]	@ (80007d8 <FND_Display+0x27c>)
 80005e2:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80005e4:	2201      	movs	r2, #1
 80005e6:	4618      	mov	r0, r3
 80005e8:	f000 fa4d 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_SET);
 80005ec:	4b7a      	ldr	r3, [pc, #488]	@ (80007d8 <FND_Display+0x27c>)
 80005ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80005f0:	4a79      	ldr	r2, [pc, #484]	@ (80007d8 <FND_Display+0x27c>)
 80005f2:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80005f4:	2201      	movs	r2, #1
 80005f6:	4618      	mov	r0, r3
 80005f8:	f000 fa45 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_RESET);
 80005fc:	4b76      	ldr	r3, [pc, #472]	@ (80007d8 <FND_Display+0x27c>)
 80005fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000600:	4a75      	ldr	r2, [pc, #468]	@ (80007d8 <FND_Display+0x27c>)
 8000602:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000604:	2200      	movs	r2, #0
 8000606:	4618      	mov	r0, r3
 8000608:	f000 fa3d 	bl	8000a86 <GPIO_WritePin>
		break;
 800060c:	e203      	b.n	8000a16 <FND_Display+0x4ba>
	case 1:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_RESET);
 800060e:	4b72      	ldr	r3, [pc, #456]	@ (80007d8 <FND_Display+0x27c>)
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a71      	ldr	r2, [pc, #452]	@ (80007d8 <FND_Display+0x27c>)
 8000614:	6851      	ldr	r1, [r2, #4]
 8000616:	2200      	movs	r2, #0
 8000618:	4618      	mov	r0, r3
 800061a:	f000 fa34 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 800061e:	4b6e      	ldr	r3, [pc, #440]	@ (80007d8 <FND_Display+0x27c>)
 8000620:	689b      	ldr	r3, [r3, #8]
 8000622:	4a6d      	ldr	r2, [pc, #436]	@ (80007d8 <FND_Display+0x27c>)
 8000624:	68d1      	ldr	r1, [r2, #12]
 8000626:	2201      	movs	r2, #1
 8000628:	4618      	mov	r0, r3
 800062a:	f000 fa2c 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 800062e:	4b6a      	ldr	r3, [pc, #424]	@ (80007d8 <FND_Display+0x27c>)
 8000630:	691b      	ldr	r3, [r3, #16]
 8000632:	4a69      	ldr	r2, [pc, #420]	@ (80007d8 <FND_Display+0x27c>)
 8000634:	6951      	ldr	r1, [r2, #20]
 8000636:	2201      	movs	r2, #1
 8000638:	4618      	mov	r0, r3
 800063a:	f000 fa24 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_RESET);
 800063e:	4b66      	ldr	r3, [pc, #408]	@ (80007d8 <FND_Display+0x27c>)
 8000640:	699b      	ldr	r3, [r3, #24]
 8000642:	4a65      	ldr	r2, [pc, #404]	@ (80007d8 <FND_Display+0x27c>)
 8000644:	69d1      	ldr	r1, [r2, #28]
 8000646:	2200      	movs	r2, #0
 8000648:	4618      	mov	r0, r3
 800064a:	f000 fa1c 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_RESET);
 800064e:	4b62      	ldr	r3, [pc, #392]	@ (80007d8 <FND_Display+0x27c>)
 8000650:	6a1b      	ldr	r3, [r3, #32]
 8000652:	4a61      	ldr	r2, [pc, #388]	@ (80007d8 <FND_Display+0x27c>)
 8000654:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000656:	2200      	movs	r2, #0
 8000658:	4618      	mov	r0, r3
 800065a:	f000 fa14 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_RESET);
 800065e:	4b5e      	ldr	r3, [pc, #376]	@ (80007d8 <FND_Display+0x27c>)
 8000660:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000662:	4a5d      	ldr	r2, [pc, #372]	@ (80007d8 <FND_Display+0x27c>)
 8000664:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000666:	2200      	movs	r2, #0
 8000668:	4618      	mov	r0, r3
 800066a:	f000 fa0c 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_RESET);
 800066e:	4b5a      	ldr	r3, [pc, #360]	@ (80007d8 <FND_Display+0x27c>)
 8000670:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000672:	4a59      	ldr	r2, [pc, #356]	@ (80007d8 <FND_Display+0x27c>)
 8000674:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000676:	2200      	movs	r2, #0
 8000678:	4618      	mov	r0, r3
 800067a:	f000 fa04 	bl	8000a86 <GPIO_WritePin>
		break;
 800067e:	e1ca      	b.n	8000a16 <FND_Display+0x4ba>
	case 2:
	{
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 8000680:	4b55      	ldr	r3, [pc, #340]	@ (80007d8 <FND_Display+0x27c>)
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	4a54      	ldr	r2, [pc, #336]	@ (80007d8 <FND_Display+0x27c>)
 8000686:	6851      	ldr	r1, [r2, #4]
 8000688:	2201      	movs	r2, #1
 800068a:	4618      	mov	r0, r3
 800068c:	f000 f9fb 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 8000690:	4b51      	ldr	r3, [pc, #324]	@ (80007d8 <FND_Display+0x27c>)
 8000692:	689b      	ldr	r3, [r3, #8]
 8000694:	4a50      	ldr	r2, [pc, #320]	@ (80007d8 <FND_Display+0x27c>)
 8000696:	68d1      	ldr	r1, [r2, #12]
 8000698:	2201      	movs	r2, #1
 800069a:	4618      	mov	r0, r3
 800069c:	f000 f9f3 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_RESET);
 80006a0:	4b4d      	ldr	r3, [pc, #308]	@ (80007d8 <FND_Display+0x27c>)
 80006a2:	691b      	ldr	r3, [r3, #16]
 80006a4:	4a4c      	ldr	r2, [pc, #304]	@ (80007d8 <FND_Display+0x27c>)
 80006a6:	6951      	ldr	r1, [r2, #20]
 80006a8:	2200      	movs	r2, #0
 80006aa:	4618      	mov	r0, r3
 80006ac:	f000 f9eb 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_SET);
 80006b0:	4b49      	ldr	r3, [pc, #292]	@ (80007d8 <FND_Display+0x27c>)
 80006b2:	699b      	ldr	r3, [r3, #24]
 80006b4:	4a48      	ldr	r2, [pc, #288]	@ (80007d8 <FND_Display+0x27c>)
 80006b6:	69d1      	ldr	r1, [r2, #28]
 80006b8:	2201      	movs	r2, #1
 80006ba:	4618      	mov	r0, r3
 80006bc:	f000 f9e3 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_SET);
 80006c0:	4b45      	ldr	r3, [pc, #276]	@ (80007d8 <FND_Display+0x27c>)
 80006c2:	6a1b      	ldr	r3, [r3, #32]
 80006c4:	4a44      	ldr	r2, [pc, #272]	@ (80007d8 <FND_Display+0x27c>)
 80006c6:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80006c8:	2201      	movs	r2, #1
 80006ca:	4618      	mov	r0, r3
 80006cc:	f000 f9db 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_RESET);
 80006d0:	4b41      	ldr	r3, [pc, #260]	@ (80007d8 <FND_Display+0x27c>)
 80006d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80006d4:	4a40      	ldr	r2, [pc, #256]	@ (80007d8 <FND_Display+0x27c>)
 80006d6:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80006d8:	2200      	movs	r2, #0
 80006da:	4618      	mov	r0, r3
 80006dc:	f000 f9d3 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_SET);
 80006e0:	4b3d      	ldr	r3, [pc, #244]	@ (80007d8 <FND_Display+0x27c>)
 80006e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006e4:	4a3c      	ldr	r2, [pc, #240]	@ (80007d8 <FND_Display+0x27c>)
 80006e6:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80006e8:	2201      	movs	r2, #1
 80006ea:	4618      	mov	r0, r3
 80006ec:	f000 f9cb 	bl	8000a86 <GPIO_WritePin>
		break;
 80006f0:	e191      	b.n	8000a16 <FND_Display+0x4ba>
	}
	case 3:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 80006f2:	4b39      	ldr	r3, [pc, #228]	@ (80007d8 <FND_Display+0x27c>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4a38      	ldr	r2, [pc, #224]	@ (80007d8 <FND_Display+0x27c>)
 80006f8:	6851      	ldr	r1, [r2, #4]
 80006fa:	2201      	movs	r2, #1
 80006fc:	4618      	mov	r0, r3
 80006fe:	f000 f9c2 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 8000702:	4b35      	ldr	r3, [pc, #212]	@ (80007d8 <FND_Display+0x27c>)
 8000704:	689b      	ldr	r3, [r3, #8]
 8000706:	4a34      	ldr	r2, [pc, #208]	@ (80007d8 <FND_Display+0x27c>)
 8000708:	68d1      	ldr	r1, [r2, #12]
 800070a:	2201      	movs	r2, #1
 800070c:	4618      	mov	r0, r3
 800070e:	f000 f9ba 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 8000712:	4b31      	ldr	r3, [pc, #196]	@ (80007d8 <FND_Display+0x27c>)
 8000714:	691b      	ldr	r3, [r3, #16]
 8000716:	4a30      	ldr	r2, [pc, #192]	@ (80007d8 <FND_Display+0x27c>)
 8000718:	6951      	ldr	r1, [r2, #20]
 800071a:	2201      	movs	r2, #1
 800071c:	4618      	mov	r0, r3
 800071e:	f000 f9b2 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_SET);
 8000722:	4b2d      	ldr	r3, [pc, #180]	@ (80007d8 <FND_Display+0x27c>)
 8000724:	699b      	ldr	r3, [r3, #24]
 8000726:	4a2c      	ldr	r2, [pc, #176]	@ (80007d8 <FND_Display+0x27c>)
 8000728:	69d1      	ldr	r1, [r2, #28]
 800072a:	2201      	movs	r2, #1
 800072c:	4618      	mov	r0, r3
 800072e:	f000 f9aa 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_RESET);
 8000732:	4b29      	ldr	r3, [pc, #164]	@ (80007d8 <FND_Display+0x27c>)
 8000734:	6a1b      	ldr	r3, [r3, #32]
 8000736:	4a28      	ldr	r2, [pc, #160]	@ (80007d8 <FND_Display+0x27c>)
 8000738:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800073a:	2200      	movs	r2, #0
 800073c:	4618      	mov	r0, r3
 800073e:	f000 f9a2 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_RESET);
 8000742:	4b25      	ldr	r3, [pc, #148]	@ (80007d8 <FND_Display+0x27c>)
 8000744:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000746:	4a24      	ldr	r2, [pc, #144]	@ (80007d8 <FND_Display+0x27c>)
 8000748:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 800074a:	2200      	movs	r2, #0
 800074c:	4618      	mov	r0, r3
 800074e:	f000 f99a 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_SET);
 8000752:	4b21      	ldr	r3, [pc, #132]	@ (80007d8 <FND_Display+0x27c>)
 8000754:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000756:	4a20      	ldr	r2, [pc, #128]	@ (80007d8 <FND_Display+0x27c>)
 8000758:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800075a:	2201      	movs	r2, #1
 800075c:	4618      	mov	r0, r3
 800075e:	f000 f992 	bl	8000a86 <GPIO_WritePin>
		break;
 8000762:	e158      	b.n	8000a16 <FND_Display+0x4ba>
	case 4:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_RESET);
 8000764:	4b1c      	ldr	r3, [pc, #112]	@ (80007d8 <FND_Display+0x27c>)
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	4a1b      	ldr	r2, [pc, #108]	@ (80007d8 <FND_Display+0x27c>)
 800076a:	6851      	ldr	r1, [r2, #4]
 800076c:	2200      	movs	r2, #0
 800076e:	4618      	mov	r0, r3
 8000770:	f000 f989 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 8000774:	4b18      	ldr	r3, [pc, #96]	@ (80007d8 <FND_Display+0x27c>)
 8000776:	689b      	ldr	r3, [r3, #8]
 8000778:	4a17      	ldr	r2, [pc, #92]	@ (80007d8 <FND_Display+0x27c>)
 800077a:	68d1      	ldr	r1, [r2, #12]
 800077c:	2201      	movs	r2, #1
 800077e:	4618      	mov	r0, r3
 8000780:	f000 f981 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 8000784:	4b14      	ldr	r3, [pc, #80]	@ (80007d8 <FND_Display+0x27c>)
 8000786:	691b      	ldr	r3, [r3, #16]
 8000788:	4a13      	ldr	r2, [pc, #76]	@ (80007d8 <FND_Display+0x27c>)
 800078a:	6951      	ldr	r1, [r2, #20]
 800078c:	2201      	movs	r2, #1
 800078e:	4618      	mov	r0, r3
 8000790:	f000 f979 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_RESET);
 8000794:	4b10      	ldr	r3, [pc, #64]	@ (80007d8 <FND_Display+0x27c>)
 8000796:	699b      	ldr	r3, [r3, #24]
 8000798:	4a0f      	ldr	r2, [pc, #60]	@ (80007d8 <FND_Display+0x27c>)
 800079a:	69d1      	ldr	r1, [r2, #28]
 800079c:	2200      	movs	r2, #0
 800079e:	4618      	mov	r0, r3
 80007a0:	f000 f971 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_RESET);
 80007a4:	4b0c      	ldr	r3, [pc, #48]	@ (80007d8 <FND_Display+0x27c>)
 80007a6:	6a1b      	ldr	r3, [r3, #32]
 80007a8:	4a0b      	ldr	r2, [pc, #44]	@ (80007d8 <FND_Display+0x27c>)
 80007aa:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80007ac:	2200      	movs	r2, #0
 80007ae:	4618      	mov	r0, r3
 80007b0:	f000 f969 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_SET);
 80007b4:	4b08      	ldr	r3, [pc, #32]	@ (80007d8 <FND_Display+0x27c>)
 80007b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80007b8:	4a07      	ldr	r2, [pc, #28]	@ (80007d8 <FND_Display+0x27c>)
 80007ba:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80007bc:	2201      	movs	r2, #1
 80007be:	4618      	mov	r0, r3
 80007c0:	f000 f961 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_SET);
 80007c4:	4b04      	ldr	r3, [pc, #16]	@ (80007d8 <FND_Display+0x27c>)
 80007c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80007c8:	4a03      	ldr	r2, [pc, #12]	@ (80007d8 <FND_Display+0x27c>)
 80007ca:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80007cc:	2201      	movs	r2, #1
 80007ce:	4618      	mov	r0, r3
 80007d0:	f000 f959 	bl	8000a86 <GPIO_WritePin>
		break;
 80007d4:	e11f      	b.n	8000a16 <FND_Display+0x4ba>
 80007d6:	bf00      	nop
 80007d8:	20000000 	.word	0x20000000
	case 5:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 80007dc:	4b90      	ldr	r3, [pc, #576]	@ (8000a20 <FND_Display+0x4c4>)
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	4a8f      	ldr	r2, [pc, #572]	@ (8000a20 <FND_Display+0x4c4>)
 80007e2:	6851      	ldr	r1, [r2, #4]
 80007e4:	2201      	movs	r2, #1
 80007e6:	4618      	mov	r0, r3
 80007e8:	f000 f94d 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_RESET);
 80007ec:	4b8c      	ldr	r3, [pc, #560]	@ (8000a20 <FND_Display+0x4c4>)
 80007ee:	689b      	ldr	r3, [r3, #8]
 80007f0:	4a8b      	ldr	r2, [pc, #556]	@ (8000a20 <FND_Display+0x4c4>)
 80007f2:	68d1      	ldr	r1, [r2, #12]
 80007f4:	2200      	movs	r2, #0
 80007f6:	4618      	mov	r0, r3
 80007f8:	f000 f945 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 80007fc:	4b88      	ldr	r3, [pc, #544]	@ (8000a20 <FND_Display+0x4c4>)
 80007fe:	691b      	ldr	r3, [r3, #16]
 8000800:	4a87      	ldr	r2, [pc, #540]	@ (8000a20 <FND_Display+0x4c4>)
 8000802:	6951      	ldr	r1, [r2, #20]
 8000804:	2201      	movs	r2, #1
 8000806:	4618      	mov	r0, r3
 8000808:	f000 f93d 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_SET);
 800080c:	4b84      	ldr	r3, [pc, #528]	@ (8000a20 <FND_Display+0x4c4>)
 800080e:	699b      	ldr	r3, [r3, #24]
 8000810:	4a83      	ldr	r2, [pc, #524]	@ (8000a20 <FND_Display+0x4c4>)
 8000812:	69d1      	ldr	r1, [r2, #28]
 8000814:	2201      	movs	r2, #1
 8000816:	4618      	mov	r0, r3
 8000818:	f000 f935 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_RESET);
 800081c:	4b80      	ldr	r3, [pc, #512]	@ (8000a20 <FND_Display+0x4c4>)
 800081e:	6a1b      	ldr	r3, [r3, #32]
 8000820:	4a7f      	ldr	r2, [pc, #508]	@ (8000a20 <FND_Display+0x4c4>)
 8000822:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000824:	2200      	movs	r2, #0
 8000826:	4618      	mov	r0, r3
 8000828:	f000 f92d 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_SET);
 800082c:	4b7c      	ldr	r3, [pc, #496]	@ (8000a20 <FND_Display+0x4c4>)
 800082e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000830:	4a7b      	ldr	r2, [pc, #492]	@ (8000a20 <FND_Display+0x4c4>)
 8000832:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000834:	2201      	movs	r2, #1
 8000836:	4618      	mov	r0, r3
 8000838:	f000 f925 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_SET);
 800083c:	4b78      	ldr	r3, [pc, #480]	@ (8000a20 <FND_Display+0x4c4>)
 800083e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000840:	4a77      	ldr	r2, [pc, #476]	@ (8000a20 <FND_Display+0x4c4>)
 8000842:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000844:	2201      	movs	r2, #1
 8000846:	4618      	mov	r0, r3
 8000848:	f000 f91d 	bl	8000a86 <GPIO_WritePin>
		break;
 800084c:	e0e3      	b.n	8000a16 <FND_Display+0x4ba>
	case 6:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 800084e:	4b74      	ldr	r3, [pc, #464]	@ (8000a20 <FND_Display+0x4c4>)
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	4a73      	ldr	r2, [pc, #460]	@ (8000a20 <FND_Display+0x4c4>)
 8000854:	6851      	ldr	r1, [r2, #4]
 8000856:	2201      	movs	r2, #1
 8000858:	4618      	mov	r0, r3
 800085a:	f000 f914 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_RESET);
 800085e:	4b70      	ldr	r3, [pc, #448]	@ (8000a20 <FND_Display+0x4c4>)
 8000860:	689b      	ldr	r3, [r3, #8]
 8000862:	4a6f      	ldr	r2, [pc, #444]	@ (8000a20 <FND_Display+0x4c4>)
 8000864:	68d1      	ldr	r1, [r2, #12]
 8000866:	2200      	movs	r2, #0
 8000868:	4618      	mov	r0, r3
 800086a:	f000 f90c 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 800086e:	4b6c      	ldr	r3, [pc, #432]	@ (8000a20 <FND_Display+0x4c4>)
 8000870:	691b      	ldr	r3, [r3, #16]
 8000872:	4a6b      	ldr	r2, [pc, #428]	@ (8000a20 <FND_Display+0x4c4>)
 8000874:	6951      	ldr	r1, [r2, #20]
 8000876:	2201      	movs	r2, #1
 8000878:	4618      	mov	r0, r3
 800087a:	f000 f904 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_SET);
 800087e:	4b68      	ldr	r3, [pc, #416]	@ (8000a20 <FND_Display+0x4c4>)
 8000880:	699b      	ldr	r3, [r3, #24]
 8000882:	4a67      	ldr	r2, [pc, #412]	@ (8000a20 <FND_Display+0x4c4>)
 8000884:	69d1      	ldr	r1, [r2, #28]
 8000886:	2201      	movs	r2, #1
 8000888:	4618      	mov	r0, r3
 800088a:	f000 f8fc 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_SET);
 800088e:	4b64      	ldr	r3, [pc, #400]	@ (8000a20 <FND_Display+0x4c4>)
 8000890:	6a1b      	ldr	r3, [r3, #32]
 8000892:	4a63      	ldr	r2, [pc, #396]	@ (8000a20 <FND_Display+0x4c4>)
 8000894:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000896:	2201      	movs	r2, #1
 8000898:	4618      	mov	r0, r3
 800089a:	f000 f8f4 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_SET);
 800089e:	4b60      	ldr	r3, [pc, #384]	@ (8000a20 <FND_Display+0x4c4>)
 80008a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80008a2:	4a5f      	ldr	r2, [pc, #380]	@ (8000a20 <FND_Display+0x4c4>)
 80008a4:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80008a6:	2201      	movs	r2, #1
 80008a8:	4618      	mov	r0, r3
 80008aa:	f000 f8ec 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_SET);
 80008ae:	4b5c      	ldr	r3, [pc, #368]	@ (8000a20 <FND_Display+0x4c4>)
 80008b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008b2:	4a5b      	ldr	r2, [pc, #364]	@ (8000a20 <FND_Display+0x4c4>)
 80008b4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 80008b6:	2201      	movs	r2, #1
 80008b8:	4618      	mov	r0, r3
 80008ba:	f000 f8e4 	bl	8000a86 <GPIO_WritePin>
		break;
 80008be:	e0aa      	b.n	8000a16 <FND_Display+0x4ba>
	case 7:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 80008c0:	4b57      	ldr	r3, [pc, #348]	@ (8000a20 <FND_Display+0x4c4>)
 80008c2:	681b      	ldr	r3, [r3, #0]
 80008c4:	4a56      	ldr	r2, [pc, #344]	@ (8000a20 <FND_Display+0x4c4>)
 80008c6:	6851      	ldr	r1, [r2, #4]
 80008c8:	2201      	movs	r2, #1
 80008ca:	4618      	mov	r0, r3
 80008cc:	f000 f8db 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 80008d0:	4b53      	ldr	r3, [pc, #332]	@ (8000a20 <FND_Display+0x4c4>)
 80008d2:	689b      	ldr	r3, [r3, #8]
 80008d4:	4a52      	ldr	r2, [pc, #328]	@ (8000a20 <FND_Display+0x4c4>)
 80008d6:	68d1      	ldr	r1, [r2, #12]
 80008d8:	2201      	movs	r2, #1
 80008da:	4618      	mov	r0, r3
 80008dc:	f000 f8d3 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 80008e0:	4b4f      	ldr	r3, [pc, #316]	@ (8000a20 <FND_Display+0x4c4>)
 80008e2:	691b      	ldr	r3, [r3, #16]
 80008e4:	4a4e      	ldr	r2, [pc, #312]	@ (8000a20 <FND_Display+0x4c4>)
 80008e6:	6951      	ldr	r1, [r2, #20]
 80008e8:	2201      	movs	r2, #1
 80008ea:	4618      	mov	r0, r3
 80008ec:	f000 f8cb 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_RESET);
 80008f0:	4b4b      	ldr	r3, [pc, #300]	@ (8000a20 <FND_Display+0x4c4>)
 80008f2:	699b      	ldr	r3, [r3, #24]
 80008f4:	4a4a      	ldr	r2, [pc, #296]	@ (8000a20 <FND_Display+0x4c4>)
 80008f6:	69d1      	ldr	r1, [r2, #28]
 80008f8:	2200      	movs	r2, #0
 80008fa:	4618      	mov	r0, r3
 80008fc:	f000 f8c3 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_RESET);
 8000900:	4b47      	ldr	r3, [pc, #284]	@ (8000a20 <FND_Display+0x4c4>)
 8000902:	6a1b      	ldr	r3, [r3, #32]
 8000904:	4a46      	ldr	r2, [pc, #280]	@ (8000a20 <FND_Display+0x4c4>)
 8000906:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8000908:	2200      	movs	r2, #0
 800090a:	4618      	mov	r0, r3
 800090c:	f000 f8bb 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_RESET);
 8000910:	4b43      	ldr	r3, [pc, #268]	@ (8000a20 <FND_Display+0x4c4>)
 8000912:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000914:	4a42      	ldr	r2, [pc, #264]	@ (8000a20 <FND_Display+0x4c4>)
 8000916:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8000918:	2200      	movs	r2, #0
 800091a:	4618      	mov	r0, r3
 800091c:	f000 f8b3 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_RESET);
 8000920:	4b3f      	ldr	r3, [pc, #252]	@ (8000a20 <FND_Display+0x4c4>)
 8000922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000924:	4a3e      	ldr	r2, [pc, #248]	@ (8000a20 <FND_Display+0x4c4>)
 8000926:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000928:	2200      	movs	r2, #0
 800092a:	4618      	mov	r0, r3
 800092c:	f000 f8ab 	bl	8000a86 <GPIO_WritePin>
		break;
 8000930:	e071      	b.n	8000a16 <FND_Display+0x4ba>
	case 8:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 8000932:	4b3b      	ldr	r3, [pc, #236]	@ (8000a20 <FND_Display+0x4c4>)
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	4a3a      	ldr	r2, [pc, #232]	@ (8000a20 <FND_Display+0x4c4>)
 8000938:	6851      	ldr	r1, [r2, #4]
 800093a:	2201      	movs	r2, #1
 800093c:	4618      	mov	r0, r3
 800093e:	f000 f8a2 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 8000942:	4b37      	ldr	r3, [pc, #220]	@ (8000a20 <FND_Display+0x4c4>)
 8000944:	689b      	ldr	r3, [r3, #8]
 8000946:	4a36      	ldr	r2, [pc, #216]	@ (8000a20 <FND_Display+0x4c4>)
 8000948:	68d1      	ldr	r1, [r2, #12]
 800094a:	2201      	movs	r2, #1
 800094c:	4618      	mov	r0, r3
 800094e:	f000 f89a 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 8000952:	4b33      	ldr	r3, [pc, #204]	@ (8000a20 <FND_Display+0x4c4>)
 8000954:	691b      	ldr	r3, [r3, #16]
 8000956:	4a32      	ldr	r2, [pc, #200]	@ (8000a20 <FND_Display+0x4c4>)
 8000958:	6951      	ldr	r1, [r2, #20]
 800095a:	2201      	movs	r2, #1
 800095c:	4618      	mov	r0, r3
 800095e:	f000 f892 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_SET);
 8000962:	4b2f      	ldr	r3, [pc, #188]	@ (8000a20 <FND_Display+0x4c4>)
 8000964:	699b      	ldr	r3, [r3, #24]
 8000966:	4a2e      	ldr	r2, [pc, #184]	@ (8000a20 <FND_Display+0x4c4>)
 8000968:	69d1      	ldr	r1, [r2, #28]
 800096a:	2201      	movs	r2, #1
 800096c:	4618      	mov	r0, r3
 800096e:	f000 f88a 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_SET);
 8000972:	4b2b      	ldr	r3, [pc, #172]	@ (8000a20 <FND_Display+0x4c4>)
 8000974:	6a1b      	ldr	r3, [r3, #32]
 8000976:	4a2a      	ldr	r2, [pc, #168]	@ (8000a20 <FND_Display+0x4c4>)
 8000978:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800097a:	2201      	movs	r2, #1
 800097c:	4618      	mov	r0, r3
 800097e:	f000 f882 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_SET);
 8000982:	4b27      	ldr	r3, [pc, #156]	@ (8000a20 <FND_Display+0x4c4>)
 8000984:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000986:	4a26      	ldr	r2, [pc, #152]	@ (8000a20 <FND_Display+0x4c4>)
 8000988:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 800098a:	2201      	movs	r2, #1
 800098c:	4618      	mov	r0, r3
 800098e:	f000 f87a 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_SET);
 8000992:	4b23      	ldr	r3, [pc, #140]	@ (8000a20 <FND_Display+0x4c4>)
 8000994:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000996:	4a22      	ldr	r2, [pc, #136]	@ (8000a20 <FND_Display+0x4c4>)
 8000998:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800099a:	2201      	movs	r2, #1
 800099c:	4618      	mov	r0, r3
 800099e:	f000 f872 	bl	8000a86 <GPIO_WritePin>
		break;
 80009a2:	e038      	b.n	8000a16 <FND_Display+0x4ba>
	case 9:
		GPIO_WritePin(FND_Bar[0].GPIOx, FND_Bar[0].pinNum, PIN_SET);
 80009a4:	4b1e      	ldr	r3, [pc, #120]	@ (8000a20 <FND_Display+0x4c4>)
 80009a6:	681b      	ldr	r3, [r3, #0]
 80009a8:	4a1d      	ldr	r2, [pc, #116]	@ (8000a20 <FND_Display+0x4c4>)
 80009aa:	6851      	ldr	r1, [r2, #4]
 80009ac:	2201      	movs	r2, #1
 80009ae:	4618      	mov	r0, r3
 80009b0:	f000 f869 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[1].GPIOx, FND_Bar[1].pinNum, PIN_SET);
 80009b4:	4b1a      	ldr	r3, [pc, #104]	@ (8000a20 <FND_Display+0x4c4>)
 80009b6:	689b      	ldr	r3, [r3, #8]
 80009b8:	4a19      	ldr	r2, [pc, #100]	@ (8000a20 <FND_Display+0x4c4>)
 80009ba:	68d1      	ldr	r1, [r2, #12]
 80009bc:	2201      	movs	r2, #1
 80009be:	4618      	mov	r0, r3
 80009c0:	f000 f861 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[2].GPIOx, FND_Bar[2].pinNum, PIN_SET);
 80009c4:	4b16      	ldr	r3, [pc, #88]	@ (8000a20 <FND_Display+0x4c4>)
 80009c6:	691b      	ldr	r3, [r3, #16]
 80009c8:	4a15      	ldr	r2, [pc, #84]	@ (8000a20 <FND_Display+0x4c4>)
 80009ca:	6951      	ldr	r1, [r2, #20]
 80009cc:	2201      	movs	r2, #1
 80009ce:	4618      	mov	r0, r3
 80009d0:	f000 f859 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[3].GPIOx, FND_Bar[3].pinNum, PIN_SET);
 80009d4:	4b12      	ldr	r3, [pc, #72]	@ (8000a20 <FND_Display+0x4c4>)
 80009d6:	699b      	ldr	r3, [r3, #24]
 80009d8:	4a11      	ldr	r2, [pc, #68]	@ (8000a20 <FND_Display+0x4c4>)
 80009da:	69d1      	ldr	r1, [r2, #28]
 80009dc:	2201      	movs	r2, #1
 80009de:	4618      	mov	r0, r3
 80009e0:	f000 f851 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[4].GPIOx, FND_Bar[4].pinNum, PIN_RESET);
 80009e4:	4b0e      	ldr	r3, [pc, #56]	@ (8000a20 <FND_Display+0x4c4>)
 80009e6:	6a1b      	ldr	r3, [r3, #32]
 80009e8:	4a0d      	ldr	r2, [pc, #52]	@ (8000a20 <FND_Display+0x4c4>)
 80009ea:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 80009ec:	2200      	movs	r2, #0
 80009ee:	4618      	mov	r0, r3
 80009f0:	f000 f849 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[5].GPIOx, FND_Bar[5].pinNum, PIN_SET);
 80009f4:	4b0a      	ldr	r3, [pc, #40]	@ (8000a20 <FND_Display+0x4c4>)
 80009f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80009f8:	4a09      	ldr	r2, [pc, #36]	@ (8000a20 <FND_Display+0x4c4>)
 80009fa:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 80009fc:	2201      	movs	r2, #1
 80009fe:	4618      	mov	r0, r3
 8000a00:	f000 f841 	bl	8000a86 <GPIO_WritePin>
		GPIO_WritePin(FND_Bar[6].GPIOx, FND_Bar[6].pinNum, PIN_SET);
 8000a04:	4b06      	ldr	r3, [pc, #24]	@ (8000a20 <FND_Display+0x4c4>)
 8000a06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a08:	4a05      	ldr	r2, [pc, #20]	@ (8000a20 <FND_Display+0x4c4>)
 8000a0a:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8000a0c:	2201      	movs	r2, #1
 8000a0e:	4618      	mov	r0, r3
 8000a10:	f000 f839 	bl	8000a86 <GPIO_WritePin>
		break;
 8000a14:	bf00      	nop

	}

}
 8000a16:	bf00      	nop
 8000a18:	3708      	adds	r7, #8
 8000a1a:	46bd      	mov	sp, r7
 8000a1c:	bd80      	pop	{r7, pc}
 8000a1e:	bf00      	nop
 8000a20:	20000000 	.word	0x20000000

08000a24 <GPIO_Init>:




void GPIO_Init(GPIO_TypeDef *GPIOx, uint32_t pinNum, pinMode pin_Mode)
{
 8000a24:	b480      	push	{r7}
 8000a26:	b085      	sub	sp, #20
 8000a28:	af00      	add	r7, sp, #0
 8000a2a:	60f8      	str	r0, [r7, #12]
 8000a2c:	60b9      	str	r1, [r7, #8]
 8000a2e:	4613      	mov	r3, r2
 8000a30:	71fb      	strb	r3, [r7, #7]
	if(pin_Mode == OUTPUT)
 8000a32:	79fb      	ldrb	r3, [r7, #7]
 8000a34:	2b00      	cmp	r3, #0
 8000a36:	d115      	bne.n	8000a64 <GPIO_Init+0x40>
	{
		GPIOx -> MODER  |=  (0x01U << (pinNum*2));
 8000a38:	68fb      	ldr	r3, [r7, #12]
 8000a3a:	681a      	ldr	r2, [r3, #0]
 8000a3c:	68bb      	ldr	r3, [r7, #8]
 8000a3e:	005b      	lsls	r3, r3, #1
 8000a40:	2101      	movs	r1, #1
 8000a42:	fa01 f303 	lsl.w	r3, r1, r3
 8000a46:	431a      	orrs	r2, r3
 8000a48:	68fb      	ldr	r3, [r7, #12]
 8000a4a:	601a      	str	r2, [r3, #0]
		GPIOx -> MODER  &= ~(0x02U << (pinNum*2));
 8000a4c:	68fb      	ldr	r3, [r7, #12]
 8000a4e:	681a      	ldr	r2, [r3, #0]
 8000a50:	68bb      	ldr	r3, [r7, #8]
 8000a52:	005b      	lsls	r3, r3, #1
 8000a54:	2102      	movs	r1, #2
 8000a56:	fa01 f303 	lsl.w	r3, r1, r3
 8000a5a:	43db      	mvns	r3, r3
 8000a5c:	401a      	ands	r2, r3
 8000a5e:	68fb      	ldr	r3, [r7, #12]
 8000a60:	601a      	str	r2, [r3, #0]
	}
	else {
		GPIOx -> MODER  &= ~(0x03U << (pinNum*2));
	}
}
 8000a62:	e00a      	b.n	8000a7a <GPIO_Init+0x56>
		GPIOx -> MODER  &= ~(0x03U << (pinNum*2));
 8000a64:	68fb      	ldr	r3, [r7, #12]
 8000a66:	681a      	ldr	r2, [r3, #0]
 8000a68:	68bb      	ldr	r3, [r7, #8]
 8000a6a:	005b      	lsls	r3, r3, #1
 8000a6c:	2103      	movs	r1, #3
 8000a6e:	fa01 f303 	lsl.w	r3, r1, r3
 8000a72:	43db      	mvns	r3, r3
 8000a74:	401a      	ands	r2, r3
 8000a76:	68fb      	ldr	r3, [r7, #12]
 8000a78:	601a      	str	r2, [r3, #0]
}
 8000a7a:	bf00      	nop
 8000a7c:	3714      	adds	r7, #20
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a84:	4770      	bx	lr

08000a86 <GPIO_WritePin>:



void GPIO_WritePin(GPIO_TypeDef *GPIOx, uint32_t pinNum, pinState pin_State)
{
 8000a86:	b480      	push	{r7}
 8000a88:	b085      	sub	sp, #20
 8000a8a:	af00      	add	r7, sp, #0
 8000a8c:	60f8      	str	r0, [r7, #12]
 8000a8e:	60b9      	str	r1, [r7, #8]
 8000a90:	4613      	mov	r3, r2
 8000a92:	71fb      	strb	r3, [r7, #7]
	if(pin_State == PIN_SET) {
 8000a94:	79fb      	ldrb	r3, [r7, #7]
 8000a96:	2b01      	cmp	r3, #1
 8000a98:	d109      	bne.n	8000aae <GPIO_WritePin+0x28>
	GPIOx -> ODR |= (1U<<pinNum);
 8000a9a:	68fb      	ldr	r3, [r7, #12]
 8000a9c:	695a      	ldr	r2, [r3, #20]
 8000a9e:	2101      	movs	r1, #1
 8000aa0:	68bb      	ldr	r3, [r7, #8]
 8000aa2:	fa01 f303 	lsl.w	r3, r1, r3
 8000aa6:	431a      	orrs	r2, r3
 8000aa8:	68fb      	ldr	r3, [r7, #12]
 8000aaa:	615a      	str	r2, [r3, #20]
	}
	else {
		GPIOx-> ODR &= ~(1U<<pinNum);
	}
}
 8000aac:	e009      	b.n	8000ac2 <GPIO_WritePin+0x3c>
		GPIOx-> ODR &= ~(1U<<pinNum);
 8000aae:	68fb      	ldr	r3, [r7, #12]
 8000ab0:	695a      	ldr	r2, [r3, #20]
 8000ab2:	2101      	movs	r1, #1
 8000ab4:	68bb      	ldr	r3, [r7, #8]
 8000ab6:	fa01 f303 	lsl.w	r3, r1, r3
 8000aba:	43db      	mvns	r3, r3
 8000abc:	401a      	ands	r2, r3
 8000abe:	68fb      	ldr	r3, [r7, #12]
 8000ac0:	615a      	str	r2, [r3, #20]
}
 8000ac2:	bf00      	nop
 8000ac4:	3714      	adds	r7, #20
 8000ac6:	46bd      	mov	sp, r7
 8000ac8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000acc:	4770      	bx	lr

08000ace <GPIO_ReadPin>:




uint32_t GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint32_t pinNum)
{
 8000ace:	b480      	push	{r7}
 8000ad0:	b083      	sub	sp, #12
 8000ad2:	af00      	add	r7, sp, #0
 8000ad4:	6078      	str	r0, [r7, #4]
 8000ad6:	6039      	str	r1, [r7, #0]
return ((GPIOx->IDR & (1<<pinNum)) ? 1 : 0); // 1bit만 내보내기 위한
 8000ad8:	687b      	ldr	r3, [r7, #4]
 8000ada:	691b      	ldr	r3, [r3, #16]
 8000adc:	2101      	movs	r1, #1
 8000ade:	683a      	ldr	r2, [r7, #0]
 8000ae0:	fa01 f202 	lsl.w	r2, r1, r2
 8000ae4:	4013      	ands	r3, r2
 8000ae6:	2b00      	cmp	r3, #0
 8000ae8:	bf14      	ite	ne
 8000aea:	2301      	movne	r3, #1
 8000aec:	2300      	moveq	r3, #0
 8000aee:	b2db      	uxtb	r3, r3

}
 8000af0:	4618      	mov	r0, r3
 8000af2:	370c      	adds	r7, #12
 8000af4:	46bd      	mov	sp, r7
 8000af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000afa:	4770      	bx	lr

08000afc <LED_Bar_init>:
      {GPIOC, 2},
      {GPIOC, 3}
};

void LED_Bar_init()
{
 8000afc:	b580      	push	{r7, lr}
 8000afe:	af00      	add	r7, sp, #0
	GPIO_Init(GPIOC, 2, OUTPUT); //1
 8000b00:	2200      	movs	r2, #0
 8000b02:	2102      	movs	r1, #2
 8000b04:	4813      	ldr	r0, [pc, #76]	@ (8000b54 <LED_Bar_init+0x58>)
 8000b06:	f7ff ff8d 	bl	8000a24 <GPIO_Init>
	GPIO_Init(GPIOC, 3, OUTPUT); //2
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	2103      	movs	r1, #3
 8000b0e:	4811      	ldr	r0, [pc, #68]	@ (8000b54 <LED_Bar_init+0x58>)
 8000b10:	f7ff ff88 	bl	8000a24 <GPIO_Init>
	GPIO_Init(GPIOA, 0, OUTPUT); //3
 8000b14:	2200      	movs	r2, #0
 8000b16:	2100      	movs	r1, #0
 8000b18:	480f      	ldr	r0, [pc, #60]	@ (8000b58 <LED_Bar_init+0x5c>)
 8000b1a:	f7ff ff83 	bl	8000a24 <GPIO_Init>
	GPIO_Init(GPIOA, 1, OUTPUT); //4
 8000b1e:	2200      	movs	r2, #0
 8000b20:	2101      	movs	r1, #1
 8000b22:	480d      	ldr	r0, [pc, #52]	@ (8000b58 <LED_Bar_init+0x5c>)
 8000b24:	f7ff ff7e 	bl	8000a24 <GPIO_Init>
	GPIO_Init(GPIOA, 4, OUTPUT); //5
 8000b28:	2200      	movs	r2, #0
 8000b2a:	2104      	movs	r1, #4
 8000b2c:	480a      	ldr	r0, [pc, #40]	@ (8000b58 <LED_Bar_init+0x5c>)
 8000b2e:	f7ff ff79 	bl	8000a24 <GPIO_Init>
	GPIO_Init(GPIOB, 0, OUTPUT); //6
 8000b32:	2200      	movs	r2, #0
 8000b34:	2100      	movs	r1, #0
 8000b36:	4809      	ldr	r0, [pc, #36]	@ (8000b5c <LED_Bar_init+0x60>)
 8000b38:	f7ff ff74 	bl	8000a24 <GPIO_Init>
	GPIO_Init(GPIOC, 1, OUTPUT); //7
 8000b3c:	2200      	movs	r2, #0
 8000b3e:	2101      	movs	r1, #1
 8000b40:	4804      	ldr	r0, [pc, #16]	@ (8000b54 <LED_Bar_init+0x58>)
 8000b42:	f7ff ff6f 	bl	8000a24 <GPIO_Init>
	GPIO_Init(GPIOC, 0, OUTPUT); //8
 8000b46:	2200      	movs	r2, #0
 8000b48:	2100      	movs	r1, #0
 8000b4a:	4802      	ldr	r0, [pc, #8]	@ (8000b54 <LED_Bar_init+0x58>)
 8000b4c:	f7ff ff6a 	bl	8000a24 <GPIO_Init>
};
 8000b50:	bf00      	nop
 8000b52:	bd80      	pop	{r7, pc}
 8000b54:	40020800 	.word	0x40020800
 8000b58:	40020000 	.word	0x40020000
 8000b5c:	40020400 	.word	0x40020400

08000b60 <SysyemClock_init>:




void SysyemClock_init()
{
 8000b60:	b480      	push	{r7}
 8000b62:	af00      	add	r7, sp, #0
	RCC -> AHB1ENR |= (1U << 0);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
 8000b64:	4b0b      	ldr	r3, [pc, #44]	@ (8000b94 <SysyemClock_init+0x34>)
 8000b66:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b68:	4a0a      	ldr	r2, [pc, #40]	@ (8000b94 <SysyemClock_init+0x34>)
 8000b6a:	f043 0301 	orr.w	r3, r3, #1
 8000b6e:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC -> AHB1ENR |= (1U << 1);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
 8000b70:	4b08      	ldr	r3, [pc, #32]	@ (8000b94 <SysyemClock_init+0x34>)
 8000b72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b74:	4a07      	ldr	r2, [pc, #28]	@ (8000b94 <SysyemClock_init+0x34>)
 8000b76:	f043 0302 	orr.w	r3, r3, #2
 8000b7a:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC -> AHB1ENR |= (1U << 2);//  RCC_AHB1ENR 해당위치의 비트만 1로 만들겠다
 8000b7c:	4b05      	ldr	r3, [pc, #20]	@ (8000b94 <SysyemClock_init+0x34>)
 8000b7e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b80:	4a04      	ldr	r2, [pc, #16]	@ (8000b94 <SysyemClock_init+0x34>)
 8000b82:	f043 0304 	orr.w	r3, r3, #4
 8000b86:	6313      	str	r3, [r2, #48]	@ 0x30
};
 8000b88:	bf00      	nop
 8000b8a:	46bd      	mov	sp, r7
 8000b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b90:	4770      	bx	lr
 8000b92:	bf00      	nop
 8000b94:	40023800 	.word	0x40023800

08000b98 <delay>:


void delay(int loop)
{
 8000b98:	b480      	push	{r7}
 8000b9a:	b085      	sub	sp, #20
 8000b9c:	af00      	add	r7, sp, #0
 8000b9e:	6078      	str	r0, [r7, #4]
	for (int j=0; j<loop; j++){
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	60fb      	str	r3, [r7, #12]
 8000ba4:	e00c      	b.n	8000bc0 <delay+0x28>
	for(int i = 0; i<1000; i++){}
 8000ba6:	2300      	movs	r3, #0
 8000ba8:	60bb      	str	r3, [r7, #8]
 8000baa:	e002      	b.n	8000bb2 <delay+0x1a>
 8000bac:	68bb      	ldr	r3, [r7, #8]
 8000bae:	3301      	adds	r3, #1
 8000bb0:	60bb      	str	r3, [r7, #8]
 8000bb2:	68bb      	ldr	r3, [r7, #8]
 8000bb4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000bb8:	dbf8      	blt.n	8000bac <delay+0x14>
	for (int j=0; j<loop; j++){
 8000bba:	68fb      	ldr	r3, [r7, #12]
 8000bbc:	3301      	adds	r3, #1
 8000bbe:	60fb      	str	r3, [r7, #12]
 8000bc0:	68fa      	ldr	r2, [r7, #12]
 8000bc2:	687b      	ldr	r3, [r7, #4]
 8000bc4:	429a      	cmp	r2, r3
 8000bc6:	dbee      	blt.n	8000ba6 <delay+0xe>
	}
}
 8000bc8:	bf00      	nop
 8000bca:	bf00      	nop
 8000bcc:	3714      	adds	r7, #20
 8000bce:	46bd      	mov	sp, r7
 8000bd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bd4:	4770      	bx	lr

08000bd6 <Button_Init>:

enum {PUSHED=0, RELEASED};


void Button_Init(Button_Handler_t *hbtn,GPIO_TypeDef *GPIOx, uint32_t pinNum )
{
 8000bd6:	b580      	push	{r7, lr}
 8000bd8:	b084      	sub	sp, #16
 8000bda:	af00      	add	r7, sp, #0
 8000bdc:	60f8      	str	r0, [r7, #12]
 8000bde:	60b9      	str	r1, [r7, #8]
 8000be0:	607a      	str	r2, [r7, #4]
    hbtn->GPIOx = GPIOx;
 8000be2:	68fb      	ldr	r3, [r7, #12]
 8000be4:	68ba      	ldr	r2, [r7, #8]
 8000be6:	601a      	str	r2, [r3, #0]
    hbtn->pinNum = pinNum;
 8000be8:	68fb      	ldr	r3, [r7, #12]
 8000bea:	687a      	ldr	r2, [r7, #4]
 8000bec:	605a      	str	r2, [r3, #4]
    hbtn->prevState = RELEASED;
 8000bee:	68fb      	ldr	r3, [r7, #12]
 8000bf0:	2201      	movs	r2, #1
 8000bf2:	609a      	str	r2, [r3, #8]
    GPIO_Init(hbtn->GPIOx, hbtn->pinNum, INPUT);
 8000bf4:	68fb      	ldr	r3, [r7, #12]
 8000bf6:	6818      	ldr	r0, [r3, #0]
 8000bf8:	68fb      	ldr	r3, [r7, #12]
 8000bfa:	685b      	ldr	r3, [r3, #4]
 8000bfc:	2201      	movs	r2, #1
 8000bfe:	4619      	mov	r1, r3
 8000c00:	f7ff ff10 	bl	8000a24 <GPIO_Init>
}
 8000c04:	bf00      	nop
 8000c06:	3710      	adds	r7, #16
 8000c08:	46bd      	mov	sp, r7
 8000c0a:	bd80      	pop	{r7, pc}

08000c0c <Button_GetState>:


button_state_t Button_GetState(Button_Handler_t *hbtn){
 8000c0c:	b580      	push	{r7, lr}
 8000c0e:	b084      	sub	sp, #16
 8000c10:	af00      	add	r7, sp, #0
 8000c12:	6078      	str	r0, [r7, #4]

    uint32_t curState;
    curState = GPIO_ReadPin(hbtn->GPIOx, hbtn->pinNum); // normal state is 1
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	681a      	ldr	r2, [r3, #0]
 8000c18:	687b      	ldr	r3, [r7, #4]
 8000c1a:	685b      	ldr	r3, [r3, #4]
 8000c1c:	4619      	mov	r1, r3
 8000c1e:	4610      	mov	r0, r2
 8000c20:	f7ff ff55 	bl	8000ace <GPIO_ReadPin>
 8000c24:	60f8      	str	r0, [r7, #12]

    if ((hbtn->prevState == RELEASED) && (curState == PUSHED)) // 버튼 눌렀을 때
 8000c26:	687b      	ldr	r3, [r7, #4]
 8000c28:	689b      	ldr	r3, [r3, #8]
 8000c2a:	2b01      	cmp	r3, #1
 8000c2c:	d10a      	bne.n	8000c44 <Button_GetState+0x38>
 8000c2e:	68fb      	ldr	r3, [r7, #12]
 8000c30:	2b00      	cmp	r3, #0
 8000c32:	d107      	bne.n	8000c44 <Button_GetState+0x38>
    {
        delay(2); // debounce
 8000c34:	2002      	movs	r0, #2
 8000c36:	f7ff ffaf 	bl	8000b98 <delay>
        hbtn->prevState = PUSHED;
 8000c3a:	687b      	ldr	r3, [r7, #4]
 8000c3c:	2200      	movs	r2, #0
 8000c3e:	609a      	str	r2, [r3, #8]
        return ACT_PUSHED;
 8000c40:	2301      	movs	r3, #1
 8000c42:	e00f      	b.n	8000c64 <Button_GetState+0x58>
    }
    else if ((hbtn->prevState == PUSHED) && (curState == RELEASED)) // 버튼 땠을 때
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	689b      	ldr	r3, [r3, #8]
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d10a      	bne.n	8000c62 <Button_GetState+0x56>
 8000c4c:	68fb      	ldr	r3, [r7, #12]
 8000c4e:	2b01      	cmp	r3, #1
 8000c50:	d107      	bne.n	8000c62 <Button_GetState+0x56>
    {
        delay(2); // debounce
 8000c52:	2002      	movs	r0, #2
 8000c54:	f7ff ffa0 	bl	8000b98 <delay>
        hbtn->prevState = RELEASED;
 8000c58:	687b      	ldr	r3, [r7, #4]
 8000c5a:	2201      	movs	r2, #1
 8000c5c:	609a      	str	r2, [r3, #8]
        return ACT_RELEASED;
 8000c5e:	2302      	movs	r3, #2
 8000c60:	e000      	b.n	8000c64 <Button_GetState+0x58>
    }

    return NO_ACT;
 8000c62:	2300      	movs	r3, #0

}
 8000c64:	4618      	mov	r0, r3
 8000c66:	3710      	adds	r7, #16
 8000c68:	46bd      	mov	sp, r7
 8000c6a:	bd80      	pop	{r7, pc}

08000c6c <main>:
#include <stdint.h>
#include "ap_main.h"


int main(void)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	af00      	add	r7, sp, #0



	ap_init();
 8000c70:	f7ff fb1a 	bl	80002a8 <ap_init>
	while(1)
	{
		ap_main();
 8000c74:	f7ff fab0 	bl	80001d8 <ap_main>
		ap_init();
 8000c78:	f7ff fb16 	bl	80002a8 <ap_init>
		ap_main();
 8000c7c:	bf00      	nop
 8000c7e:	e7f9      	b.n	8000c74 <main+0x8>

08000c80 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000c80:	480d      	ldr	r0, [pc, #52]	@ (8000cb8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000c82:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000c84:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000c88:	480c      	ldr	r0, [pc, #48]	@ (8000cbc <LoopForever+0x6>)
  ldr r1, =_edata
 8000c8a:	490d      	ldr	r1, [pc, #52]	@ (8000cc0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000c8c:	4a0d      	ldr	r2, [pc, #52]	@ (8000cc4 <LoopForever+0xe>)
  movs r3, #0
 8000c8e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000c90:	e002      	b.n	8000c98 <LoopCopyDataInit>

08000c92 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000c92:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000c94:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000c96:	3304      	adds	r3, #4

08000c98 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000c98:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000c9a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000c9c:	d3f9      	bcc.n	8000c92 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000c9e:	4a0a      	ldr	r2, [pc, #40]	@ (8000cc8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000ca0:	4c0a      	ldr	r4, [pc, #40]	@ (8000ccc <LoopForever+0x16>)
  movs r3, #0
 8000ca2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000ca4:	e001      	b.n	8000caa <LoopFillZerobss>

08000ca6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000ca6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ca8:	3204      	adds	r2, #4

08000caa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000caa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000cac:	d3fb      	bcc.n	8000ca6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000cae:	f000 f811 	bl	8000cd4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000cb2:	f7ff ffdb 	bl	8000c6c <main>

08000cb6 <LoopForever>:

LoopForever:
  b LoopForever
 8000cb6:	e7fe      	b.n	8000cb6 <LoopForever>
  ldr   r0, =_estack
 8000cb8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000cbc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000cc0:	20000038 	.word	0x20000038
  ldr r2, =_sidata
 8000cc4:	08000d3c 	.word	0x08000d3c
  ldr r2, =_sbss
 8000cc8:	20000038 	.word	0x20000038
  ldr r4, =_ebss
 8000ccc:	2000007c 	.word	0x2000007c

08000cd0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000cd0:	e7fe      	b.n	8000cd0 <ADC_IRQHandler>
	...

08000cd4 <__libc_init_array>:
 8000cd4:	b570      	push	{r4, r5, r6, lr}
 8000cd6:	4d0d      	ldr	r5, [pc, #52]	@ (8000d0c <__libc_init_array+0x38>)
 8000cd8:	4c0d      	ldr	r4, [pc, #52]	@ (8000d10 <__libc_init_array+0x3c>)
 8000cda:	1b64      	subs	r4, r4, r5
 8000cdc:	10a4      	asrs	r4, r4, #2
 8000cde:	2600      	movs	r6, #0
 8000ce0:	42a6      	cmp	r6, r4
 8000ce2:	d109      	bne.n	8000cf8 <__libc_init_array+0x24>
 8000ce4:	4d0b      	ldr	r5, [pc, #44]	@ (8000d14 <__libc_init_array+0x40>)
 8000ce6:	4c0c      	ldr	r4, [pc, #48]	@ (8000d18 <__libc_init_array+0x44>)
 8000ce8:	f000 f818 	bl	8000d1c <_init>
 8000cec:	1b64      	subs	r4, r4, r5
 8000cee:	10a4      	asrs	r4, r4, #2
 8000cf0:	2600      	movs	r6, #0
 8000cf2:	42a6      	cmp	r6, r4
 8000cf4:	d105      	bne.n	8000d02 <__libc_init_array+0x2e>
 8000cf6:	bd70      	pop	{r4, r5, r6, pc}
 8000cf8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cfc:	4798      	blx	r3
 8000cfe:	3601      	adds	r6, #1
 8000d00:	e7ee      	b.n	8000ce0 <__libc_init_array+0xc>
 8000d02:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d06:	4798      	blx	r3
 8000d08:	3601      	adds	r6, #1
 8000d0a:	e7f2      	b.n	8000cf2 <__libc_init_array+0x1e>
 8000d0c:	08000d34 	.word	0x08000d34
 8000d10:	08000d34 	.word	0x08000d34
 8000d14:	08000d34 	.word	0x08000d34
 8000d18:	08000d38 	.word	0x08000d38

08000d1c <_init>:
 8000d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d1e:	bf00      	nop
 8000d20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d22:	bc08      	pop	{r3}
 8000d24:	469e      	mov	lr, r3
 8000d26:	4770      	bx	lr

08000d28 <_fini>:
 8000d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2a:	bf00      	nop
 8000d2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d2e:	bc08      	pop	{r3}
 8000d30:	469e      	mov	lr, r3
 8000d32:	4770      	bx	lr
